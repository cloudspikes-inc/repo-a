# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      PACKAGES_TO_UPGRADE: ${{ needs.run_publish.outputs.packages }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        repo: ['cloudspikes-ca/repo-b']

    timeout-minutes: 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Dispatch to workflows #1
        run: |
            curl -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.DISPATCH_TOKEN }}" \
            --request POST \
            --data '{"event_type": "test_event", "client_payload": { "test-data": "test-case-1" }}' https://api.github.com/repos/${{ matrix.repo }}/dispatches


      - name: Dispatch to workflows #2
        run: |
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.DISPATCH_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/cloudspikes-inc/repo-b/dispatches \
            -d '{"event_type":"test_event","client_payload":{"unit":false,"integration":true}}'




      

